import os
import pandas as pd
from sqlalchemy import create_engine, text
from dotenv import load_dotenv

# Cargar credenciales desde .env
load_dotenv()
DATABASE_URL = os.getenv("DATABASE_URL")
engine = create_engine(DATABASE_URL)

# Ruta base donde est√°n las carpetas por cliente
BASE_PATH = "data"

# Recorremos cada subcarpeta en "data/"
for client_id in os.listdir(BASE_PATH):
    client_folder = os.path.join(BASE_PATH, client_id)
    csv_path = os.path.join(client_folder, "uploaded_settlement.csv")

    if not os.path.isdir(client_folder) or not os.path.exists(csv_path):
        continue  # saltamos si no es carpeta o no tiene CSV

    schema_name = client_id.lower()

    print(f"üîÑ Procesando cliente: {client_id}")

    try:
        with engine.begin() as conn:
            # Crear esquema si no existe
            conn.execute(text(f"CREATE SCHEMA IF NOT EXISTS {schema_name};"))

            # Crear tabla si no existe
            conn.execute(text(f"""
                CREATE TABLE IF NOT EXISTS {schema_name}.raw_amazon_settlement (
                    settlement_id TEXT,
                    order_id TEXT,
                    sku TEXT,
                    amount_type TEXT,
                    amount_description TEXT,
                    amount NUMERIC,
                    date DATE,
                    inserted_at TIMESTAMP DEFAULT NOW()
                );
            """))

        # Leer CSV e insertar
        df = pd.read_csv(csv_path)
        df.to_sql("raw_amazon_settlement", engine, schema=schema_name, if_exists="append", index=False)

        print(f"‚úÖ Datos cargados para cliente '{client_id}'")
    except Exception as e:
        print(f"‚ùå Error al procesar cliente '{client_id}': {e}")
